services:
  api:
    image: gatuno-api
    container_name: gatuno-api
    restart: unless-stopped
    build:
      context: ./back
      dockerfile: Dockerfile.prod
    ports:
      - "${API_PORT}:3000"
    environment:
      - NODE_ENV=${NODE_ENV}
      - SELENIUM_URL=http://selenium-hub:4444/wd/hub
      - API_URL=http://${API_HOST}
      - APP_URL=${APP_HOST}
      - DB_PORT=3306
      - DB_TYPE=mysql
      - DB_HOST=database
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - DB_NAME=${DB_NAME}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    volumes:
      - ./back/src:/usr/src/app/src
      - ./back/.env:/usr/src/app/.env
      - api-data:/usr/src/app/data
    depends_on:
      - database
      - selenium-hub
      - redis
    networks:
      - traefik_traefik-proxy-net
      - gatuno-net
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`${API_HOST}`)"
      - "traefik.docker.network=traefik_traefik-proxy-net"
      - "traefik.http.services.api.loadbalancer.server.port=3000"
  redis:
    image: "redis:8.0-alpine"
    container_name: gatuno-redis
    restart: always
    command: redis-server
    volumes:
      - redis_data:/data
    networks:
      - gatuno-net

  redis-commander:
    image: ghcr.io/joeferner/redis-commander:latest
    container_name: gatuno-redis-commander
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "${REDISCOMMANDER_PORT}:8081"
    depends_on:
      - redis
    networks:
      - gatuno-net

  database:
    image: mysql:8.0
    container_name: gatuno-database
    ports:
      - "${DB_EXTERNAL_PORT}:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASS}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASS}
    volumes:
      - database-data:/var/lib/mysql
    command: >
      --default-authentication-plugin=mysql_native_password
    restart: unless-stopped
    networks:
      - gatuno-net

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: gatuno-phpmyadmin
    ports:
      - "${PHPMYADMIN_PORT}:80"
    environment:
      PMA_HOST: database
      PMA_USER: ${DB_USER}
      PMA_PASSWORD: ${DB_PASS}
    depends_on:
      - database
    networks:
      - gatuno-net

  selenium-hub:
    image: selenium/hub:latest
    ports:
      - "${SELENIUM_HUB_PORT_1}:4442"
      - "${SELENIUM_HUB_PORT_2}:4443"
      - "${SELENIUM_HUB_PORT_3}:4444"
    environment:
      - SE_ROUTER_PASSWORD=admin
    networks:
    - gatuno-net

  node-docker:
    image: selenium/node-docker:latest
    shm_size: 5g
    depends_on:
      - selenium-hub
    environment:
      - SE_EVENT_BUS_HOST=selenium-hub
      - SE_EVENT_BUS_PUBLISH_PORT=4442
      - SE_EVENT_BUS_SUBSCRIBE_PORT=4443
      - SE_NODE_MAX_SESSIONS=4
    volumes:
      - ./config.toml:/opt/bin/config.toml
      - /var/run/docker.sock:/var/run/docker.sock
      - selenium-data:/opt/selenium/assets
    networks:
      - gatuno-net

  app:
    image: gatuno-app
    container_name: gatuno-app
    build:
      context: ./front
      dockerfile: Dockerfile.prod
    ports:
      - "${APP_PORT}:4000"
    environment:
      - NODE_ENV=${NODE_ENV}
    depends_on:
      - api
    restart: unless-stopped
    networks:
      - traefik_traefik-proxy-net
      - gatuno-net
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.app.rule=Host(`${APP_HOST}`)"
      - "traefik.http.services.app.loadbalancer.server.port=4000"
      - "traefik.docker.network=traefik_traefik-proxy-net"

volumes:
  database-data:
    driver: local
  selenium-data:
    driver: local
  api-data:
    driver: local
  redis_data:
    driver: local

networks:
  traefik_traefik-proxy-net:
    external: true
  gatuno-net:
    driver: bridge
